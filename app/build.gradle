apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: "androidx.navigation.safeargs.kotlin"

apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.yudikarma.moviecatalogsubmision2"
        minSdkVersion 22
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            buildConfigField("String", "BASE_URL", "\"https://www.thesportsdb.com/\"")
            buildConfigField("String", "IMG_POST_URL", "\"files/images/post/\"")
            buildConfigField("String", "IMG_PROFILE_URL", "\"files/images/profile/\"")
            buildConfigField("String", "API_KEY", "\"43de652904b9990f77c64ef4301dedb9\"")
            buildConfigField("String", "LANGUAGE_EN", "\"en-US\"")

        }

    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // Add for using latest experimental build of Android Extensions
    androidExtensions {
        experimental = true
    }

    // Gradle automatically adds 'android.test.runner' as a dependency.
    useLibrary 'android.test.runner'

    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    testOptions {
        animationsDisabled = true
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    //google material
    implementation 'com.google.android.material:material:1.1.0-alpha05'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-alpha06'

    implementation 'com.android.support:support-annotations:28.0.0'

    //anko
    implementation "org.jetbrains.anko:anko-commons:$rootProject.anko_commons"

    //dagger
    implementation "com.google.dagger:dagger:$rootProject.dagger"
    implementation "com.google.dagger:dagger-android:$rootProject.dagger"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger"
    implementation 'androidx.preference:preference:1.1.0-rc01'
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttp_logging_interceptor"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

    //Guave
    api 'com.google.guava:guava:28.0-android'

    //shimmer layout for loading content
    implementation "com.facebook.shimmer:shimmer:$rootProject.shimmer"


    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'

    //navigation
    implementation 'android.arch.navigation:navigation-fragment-ktx:1.0.0'
    implementation 'android.arch.navigation:navigation-ui-ktx:1.0.0'

    //lifecycle

    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycleVersion"

    //multidex
    implementation 'com.android.support:multidex:1.0.3'

    //glide
    kapt "com.github.bumptech.glide:compiler:$rootProject.glideVersion"
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"

    //hawk
    implementation "com.orhanobut:hawk:$rootProject.hawk"

    // Room dependencies
    implementation 'androidx.room:room-runtime:2.1.0'
    kapt 'androidx.room:room-compiler:2.1.0'

    //likes icon
    implementation 'com.github.jd-alexander:LikeButton:0.2.3'

    //material search view
    implementation 'com.miguelcatalan:materialsearchview:1.4.0'

    //workmanager
    implementation "androidx.work:work-runtime-ktx:$rootProject.work_version"

    //gson seriable
    implementation 'com.google.code.gson:gson:2.8.5'

    implementation "org.jetbrains.anko:anko:$anko_version"
    implementation "org.jetbrains.anko:anko-commons:$anko_version"


    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "org.jetbrains.anko:anko-appcompat-v7:$anko_version"
    implementation "org.jetbrains.anko:anko-design:$anko_version"
    implementation "org.jetbrains.anko:anko-recyclerview-v7:$anko_version"
    implementation 'com.squareup.picasso:picasso:2.71828'

    //unit test
    testImplementation 'org.mockito:mockito-core:3.0.0'
    testImplementation "org.mockito:mockito-inline:3.0.0"

    //instrument test
    // Espresso
    def espresso = "3.1.0-alpha3"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso"
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$espresso"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso"
    androidTestImplementation "androidx.test.espresso:espresso-accessibility:$espresso"
    androidTestImplementation "androidx.test.espresso:espresso-web:$espresso"
    implementation "com.android.support.test.espresso:espresso-idling-resource:$espresso"


    /* // The following Espresso dependency can be either "implementation"
     // or "androidTestImplementation", depending on whether you want the
     // dependency to appear on your APK's compile classpath or the test APK
     // classpath.
     androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.2.0'
 */
    // androidx.test
    def androidx_test = "1.1.0"
    androidTestImplementation "androidx.test:runner:$androidx_test"
    androidTestImplementation "androidx.test:core:1.2.0"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidx_test"
    androidTestImplementation "androidx.test:rules:$androidx_test"
    androidTestImplementation "org.mockito:mockito-android:2.25.0"

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.ext:truth:1.2.0'
    androidTestImplementation 'com.google.truth:truth:0.42'


    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:2.2.2") {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }


    implementation("androidx.fragment:fragment-testing:1.1.0-beta01") {
        exclude group: 'androidx.test', module: 'core'
    }

    testImplementation 'org.robolectric:robolectric:4.3.1'
    androidTestImplementation 'org.robolectric:annotations:4.3.1'

    androidTestImplementation 'com.github.fabioCollini.daggermock:daggermock:0.8.5'
    androidTestImplementation 'com.github.fabioCollini.daggermock:daggermock-kotlin:0.8.5'

    testImplementation 'com.google.dagger:dagger:2.21'
    testImplementation 'com.google.dagger:dagger-compiler:2.16'


}
